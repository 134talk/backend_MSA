server:
  port: 0 # 랜덤하게 지정

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defalutZone: http://localhost:8761/eureka  
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    
spring:
  application:
    name: chat-service
  data:
    redis:
      host: 127.0.0.1
      port: 6379
    mongodb:
      host: 172.31.44.36
      port: 27017
      database: admin
      username: 134talk
      password: 134talk
  kafka:
    consumer:
      group-id: testTopic
      enable-auto-commit: true
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: defaultTopic
    bootstrap-servers: localhost:9092
    zipkin:
      sender:
        type: kafka